# The default.conf file sets up the server block for handling HTTPS requests and
# proxying them to the WordPress service
# copied to /etc/nginx/http.d/default.conf
# User and process configuration
user www;  # The user under which the Nginx worker processes will run
worker_processes auto;  # Automatically detect the number of available CPU cores and start a worker process for each
error_log /var/log/nginx/error.log warn;  # Specify the location and level for error logging
pid /var/run/nginx.pid;  # The location of the PID file

# Events block: configure worker connection handling
events {
    worker_connections 1024;  # The maximum number of simultaneous connections that can be handled by a worker process
}

# HTTP block: settings related to handling HTTP requests
http {
    include /etc/nginx/mime.types;  # Load MIME types for serving static content with appropriate Content-Type headers
    default_type application/octet-stream;  # The default MIME type for unknown file types

    # Log format for access logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;  # Access log location and format

    sendfile on;  # Use sendfile to transfer files directly from disk to the network
    keepalive_timeout 65;  # The timeout for keep-alive connections

    include /etc/nginx/http.d/*.conf;  # Include additional server configurations from specified directory

    # Server block for handling HTTP and HTTPS requests
    server {
        resolver 127.0.0.11 valid=30s ipv6=off;  # Docker DNS resolver
        listen 80;  # Listen on port 80 for incoming HTTP requests
        server_name lclerc.42.fr;  # The domain name(s) for which this server block is responsible

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;
    }

    # Server block for handling HTTPS requests
    server {
        resolver 127.0.0.11 valid=30s ipv6=off;  # Docker DNS resolver
        listen 443 ssl;  # Listen on port 443 for incoming HTTPS requests
        server_name lclerc.42.fr;  # The domain name(s) for which this server block is responsible

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/certificate.crt;  # The path to the SSL certificate file
        ssl_certificate_key /etc/nginx/ssl/certificate.key;  # The path to the SSL certificate key file
        ssl_protocols       TLSv1.2 TLSv1.3;

        # Root directory for static content
        root /var/www/html;  # The root directory from which files will be served
        index index.php index.html index.htm;  # The default files to serve if a directory is requested

        # Location block for handling requests to the root URL
        location / {
            try_files $uri $uri/ /index.php?$args;  # Try to serve the requested URI, and fallback to index.php if not found
        }

        # Location block for handling PHP files
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_pass wordpress:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_index index.php;
        }


        # Error and access logs
        error_log /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
    }
}

