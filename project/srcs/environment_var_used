DOMAIN_NAME=lclerc.42.fr
NGINX_HOST_DOMAIN=lclerc.42.fr

# certificates
CERTS_=/etc/ssl/certs/nginx-selfsigned.crt

# MYSQL SETUP
MYSQL_ROOT_PASSWORD=changeme
MYSQL_USER=toto
MYSQL_PASSWORD=changeme
DB_NAME=wordpress	# Name of wordpress database
DB_PASSWORD=changeme 	# Used by WordPress to connect to database
DB_HOST=mariadb 	# User by WP as service name of the MariaDB container in Docker compose setup

# WORDPRESS SETUP
WP_SITE_TITLE=iNCePTioN
WP_USER=tata
WP_PASSWORD=changeme
WP_EMAIL=tata@gmail.com
WP_ADMIN_USER=toto
WP_ADMIN_PASSWORD=changeme
WP_ADMIN_EMAIL=toto@gmail.com

## Generated from https://api.wordpress.org/secret-key/1.1/salt/ 
WP_AUTH_KEY_HERE=}zeH.o>I|bIQ4s:hevQ4V39Y)ea16<+Vj%Qa1Z9Lv2eNhc+x>/Hq7BE8J^7s=ZBd
WP_SECURE_AUTH_KEY_HERE=ixhrg7Q>]N1RxC^iqK,;i0-[F}[%Res`3^fuAWxbA[s=@q(f(K4X5Xu]L5s!ClC~
WP_LOGGED_IN_KEY_HERE=V{-DK-7dG_PqLFPB|ENrZDoDYWSfe-e29%L|<)<0+<ulsfPT]Q>Oj8fb-_3[CTRO
WP_NONCE_KEY_HERE=3}rN+hLC`riD1Lx6r7JPK_yJh6+:*ck4^r!c,&a5NL}oo g1=v{`LUc1-&JZ:<+u
WP_AUTH_SALT_HERE=xB*jrQP>b08E8+Bp+~k|##-x#u1.+B4hBG]H`q:6v%H~7QtU:|m:6GF^83A8a|aQ
WP_SECURE_AUTH_SALT_HERE=x|SxF({H-uPI[1q%-|X,8}x`&~*|2*xS6)L0#9r+7T5rmZnp?Xqod4I9UP]%(C*j
WP_LOGGED_IN_SALT_HERE=`W8^Y*zaBy2VS1T2vQT-njOqfem,z(ZWKextSMF3{_8HYy`EYV(FINv(qM,JxI-Q
WP_NONCE_SALT_HERE=pBk%cBs[Z+%1OCMtgC! b|I-jc@v=W;$upOeMhXQ.hY(Pk!BhF|]>gh|{1uCt4|0

./docker-compose.yml:      - DOMAIN_NAME=${DOMAIN_NAME}
./docker-compose.yml:      - WP_SITE_TITLE=${WP_SITE_TITLE}
./docker-compose.yml:      - WP_USER=${WP_USER}
./docker-compose.yml:      - WP_PASSWORD=${WP_PASSWORD}
./docker-compose.yml:      - WP_EMAIL=${WP_EMAIL}
./docker-compose.yml:      - WP_ADMIN_USER=${WP_ADMIN_USER}
./docker-compose.yml:      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
./docker-compose.yml:      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
./docker-compose.yml:      - DB_NAME=${DB_NAME}
./docker-compose.yml:      - DB_USER=${MYSQL_USER}
./docker-compose.yml:      - DB_PASSWORD=${MYSQL_PASSWORD}
./docker-compose.yml:      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
./docker-compose.yml:      - MYSQL_USER=${MYSQL_USER}
./docker-compose.yml:      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
./docker-compose.yml:      - MYSQL_DATABASE=${DB_NAME}
./requirements/mariadb/tools/entrypoint.sh:CREATE DATABASE IF NOT EXISTS ${DATABASE};
./requirements/mariadb/tools/entrypoint.sh:CREATE USER IF NOT EXISTS '${USER}'@'%';
./requirements/mariadb/tools/entrypoint.sh:SET PASSWORD FOR '${USER}'@'%' = PASSWORD('${PASSWORD}');
./requirements/mariadb/tools/entrypoint.sh:GRANT ALL PRIVILEGES ON ${DATABASE}.* TO '${USER}'@'%';
./requirements/mariadb/tools/entrypoint.sh:ALTER USER 'root'@'localhost' IDENTIFIED BY '${ROOT_PASSWORD}';
./requirements/nginx/conf/default.conf:    server_name ${NGINX_HOST_DOMAIN};
./requirements/nginx/conf/default.conf:    ssl_certificate /etc/nginx/certs/${NGINX_HOST_DOMAIN}.crt;
./requirements/nginx/conf/default.conf:    ssl_certificate_key /etc/nginx/certs/${NGINX_HOST_DOMAIN}.key;
./requirements/nginx/Dockerfile:RUN openssl req -x509 -newkey rsa:4096 -keyout /etc/nginx/certs/${NGINX_HOST_DOMAIN}.key -out /etc/nginx/certs/${NGINX_HOST_DOMAIN}.crt -sha256 -days 365 -nodes -subj "/CN=${NGINX_HOST_DOMAIN}"
./requirements/wordpress/tools/entrypoint.sh:	/wordpress/wp core install  --url=${DOMAIN_NAME} \
./requirements/wordpress/tools/entrypoint.sh:		--title=${WP_SITE_TITLE} \
./requirements/wordpress/tools/entrypoint.sh:		--admin_user=${WP_ADMIN_USER} \
./requirements/wordpress/tools/entrypoint.sh:		--admin_password=${WP_ADMIN_PASSWORD} \
./requirements/wordpress/tools/entrypoint.sh:		--admin_email=${WP_ADMIN_EMAIL} \
./requirements/wordpress/tools/entrypoint.sh:	/wordpress/wp user create ${WP_USER} \
./requirements/wordpress/tools/entrypoint.sh:		${WP_EMAIL} \
./requirements/wordpress/tools/entrypoint.sh:		--user_pass=${WP_PASSWORD}
./requirements/wordpress/tools/entrypoint.sh:	/wordpress/wp option update siteurl "https://${DOMAIN_NAME}"
./requirements/wordpress/tools/entrypoint.sh:	/wordpress/wp option update home "https://${DOMAIN_NAME}"
